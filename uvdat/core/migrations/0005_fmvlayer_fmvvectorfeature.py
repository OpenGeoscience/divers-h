# Generated by Django 5.0.7 on 2025-06-09 12:26

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import s3_file_field.fields


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0004_displayconfiguration'),
    ]

    operations = [
        migrations.CreateModel(
            name='FMVLayer',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('metadata', models.JSONField(blank=True, null=True)),
                ('default_style', models.JSONField(blank=True, null=True)),
                ('index', models.IntegerField(null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                (
                    'bounds',
                    django.contrib.gis.db.models.fields.PolygonField(
                        blank=True, help_text='Bounds/Extents of the Layer', null=True, srid=4326
                    ),
                ),
                ('fmv_source_video', s3_file_field.fields.S3FileField(null=True)),
                ('fmv_video', s3_file_field.fields.S3FileField(null=True)),
                ('geojson_file', s3_file_field.fields.S3FileField(null=True)),
                (
                    'fmv_fps',
                    models.FloatField(
                        blank=True, help_text='Frames per second of the FMV video.', null=True
                    ),
                ),
                (
                    'fmv_frame_count',
                    models.IntegerField(
                        blank=True, help_text='Total number of frames in the FMV video.', null=True
                    ),
                ),
                (
                    'fmv_video_duration',
                    models.FloatField(
                        blank=True, help_text='Duration of the FMV video in seconds.', null=True
                    ),
                ),
                (
                    'fmv_video_width',
                    models.IntegerField(
                        blank=True, help_text='Width of the FMV video in pixels.', null=True
                    ),
                ),
                (
                    'fmv_video_height',
                    models.IntegerField(
                        blank=True, help_text='Height of the FMV video in pixels.', null=True
                    ),
                ),
                (
                    'dataset',
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.CASCADE, to='core.dataset'
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FMVVectorFeature',
            fields=[
                (
                    'id',
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                ('geometry', django.contrib.gis.db.models.fields.GeometryField(srid=4326)),
                ('properties', models.JSONField()),
                (
                    'map_layer',
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to='core.fmvlayer'
                    ),
                ),
            ],
        ),
    ]
